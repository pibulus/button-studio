import { updateCheck } from "./update_check.ts";
import { DAY, dirname, fromFileUrl, join, toFileUrl } from "./deps.ts";
import { build } from "./build.ts";
import { collect, ensureMinDenoVersion, generate } from "./mod.ts";
import { startServer } from "../server/boot.ts";
import { getInternalFreshState } from "../server/config.ts";
import { getServerContext } from "../server/context.ts";
export async function dev(base, entrypoint, config) {
  ensureMinDenoVersion();
  // Run update check in background
  updateCheck(DAY).catch(()=>{});
  const dir = dirname(fromFileUrl(base));
  let currentManifest;
  const prevManifest = Deno.env.get("FRSH_DEV_PREVIOUS_MANIFEST");
  if (prevManifest) {
    currentManifest = JSON.parse(prevManifest);
  } else {
    currentManifest = {
      islands: [],
      routes: []
    };
  }
  const newManifest = await collect(dir, config?.router?.ignoreFilePattern);
  Deno.env.set("FRSH_DEV_PREVIOUS_MANIFEST", JSON.stringify(newManifest));
  const manifestChanged = !arraysEqual(newManifest.routes, currentManifest.routes) || !arraysEqual(newManifest.islands, currentManifest.islands);
  if (manifestChanged) await generate(dir, newManifest);
  const manifest = (await import(toFileUrl(join(dir, "fresh.gen.ts")).href)).default;
  if (Deno.args.includes("build")) {
    const state = await getInternalFreshState(manifest, config ?? {});
    state.config.dev = false;
    state.loadSnapshot = false;
    state.build = true;
    await build(state);
  } else if (config) {
    const state = await getInternalFreshState(manifest, config);
    state.config.dev = true;
    state.loadSnapshot = false;
    const ctx = await getServerContext(state);
    await startServer(ctx.handler(), {
      ...state.config.server,
      basePath: state.config.basePath
    });
  } else {
    // Legacy entry point: Back then `dev.ts` would call `main.ts` but
    // this causes duplicate plugin instantiation if both `dev.ts` and
    // `main.ts` instantiate plugins.
    Deno.env.set("__FRSH_LEGACY_DEV", "true");
    entrypoint = new URL(entrypoint, base).href;
    await import(entrypoint);
  }
}
function arraysEqual(a, b) {
  if (a.length !== b.length) return false;
  for(let i = 0; i < a.length; ++i){
    if (a[i] !== b[i]) return false;
  }
  return true;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvZnJlc2hAMS43LjMvc3JjL2Rldi9kZXZfY29tbWFuZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1cGRhdGVDaGVjayB9IGZyb20gXCIuL3VwZGF0ZV9jaGVjay50c1wiO1xuaW1wb3J0IHsgREFZLCBkaXJuYW1lLCBmcm9tRmlsZVVybCwgam9pbiwgdG9GaWxlVXJsIH0gZnJvbSBcIi4vZGVwcy50c1wiO1xuaW1wb3J0IHsgRnJlc2hDb25maWcsIE1hbmlmZXN0IGFzIFNlcnZlck1hbmlmZXN0IH0gZnJvbSBcIi4uL3NlcnZlci9tb2QudHNcIjtcbmltcG9ydCB7IGJ1aWxkIH0gZnJvbSBcIi4vYnVpbGQudHNcIjtcbmltcG9ydCB7IGNvbGxlY3QsIGVuc3VyZU1pbkRlbm9WZXJzaW9uLCBnZW5lcmF0ZSwgTWFuaWZlc3QgfSBmcm9tIFwiLi9tb2QudHNcIjtcbmltcG9ydCB7IHN0YXJ0U2VydmVyIH0gZnJvbSBcIi4uL3NlcnZlci9ib290LnRzXCI7XG5pbXBvcnQgeyBnZXRJbnRlcm5hbEZyZXNoU3RhdGUgfSBmcm9tIFwiLi4vc2VydmVyL2NvbmZpZy50c1wiO1xuaW1wb3J0IHsgZ2V0U2VydmVyQ29udGV4dCB9IGZyb20gXCIuLi9zZXJ2ZXIvY29udGV4dC50c1wiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGV2KFxuICBiYXNlOiBzdHJpbmcsXG4gIGVudHJ5cG9pbnQ6IHN0cmluZyxcbiAgY29uZmlnPzogRnJlc2hDb25maWcsXG4pIHtcbiAgZW5zdXJlTWluRGVub1ZlcnNpb24oKTtcblxuICAvLyBSdW4gdXBkYXRlIGNoZWNrIGluIGJhY2tncm91bmRcbiAgdXBkYXRlQ2hlY2soREFZKS5jYXRjaCgoKSA9PiB7fSk7XG5cbiAgY29uc3QgZGlyID0gZGlybmFtZShmcm9tRmlsZVVybChiYXNlKSk7XG5cbiAgbGV0IGN1cnJlbnRNYW5pZmVzdDogTWFuaWZlc3Q7XG4gIGNvbnN0IHByZXZNYW5pZmVzdCA9IERlbm8uZW52LmdldChcIkZSU0hfREVWX1BSRVZJT1VTX01BTklGRVNUXCIpO1xuICBpZiAocHJldk1hbmlmZXN0KSB7XG4gICAgY3VycmVudE1hbmlmZXN0ID0gSlNPTi5wYXJzZShwcmV2TWFuaWZlc3QpO1xuICB9IGVsc2Uge1xuICAgIGN1cnJlbnRNYW5pZmVzdCA9IHsgaXNsYW5kczogW10sIHJvdXRlczogW10gfTtcbiAgfVxuICBjb25zdCBuZXdNYW5pZmVzdCA9IGF3YWl0IGNvbGxlY3QoZGlyLCBjb25maWc/LnJvdXRlcj8uaWdub3JlRmlsZVBhdHRlcm4pO1xuICBEZW5vLmVudi5zZXQoXCJGUlNIX0RFVl9QUkVWSU9VU19NQU5JRkVTVFwiLCBKU09OLnN0cmluZ2lmeShuZXdNYW5pZmVzdCkpO1xuXG4gIGNvbnN0IG1hbmlmZXN0Q2hhbmdlZCA9XG4gICAgIWFycmF5c0VxdWFsKG5ld01hbmlmZXN0LnJvdXRlcywgY3VycmVudE1hbmlmZXN0LnJvdXRlcykgfHxcbiAgICAhYXJyYXlzRXF1YWwobmV3TWFuaWZlc3QuaXNsYW5kcywgY3VycmVudE1hbmlmZXN0LmlzbGFuZHMpO1xuXG4gIGlmIChtYW5pZmVzdENoYW5nZWQpIGF3YWl0IGdlbmVyYXRlKGRpciwgbmV3TWFuaWZlc3QpO1xuXG4gIGNvbnN0IG1hbmlmZXN0ID0gKGF3YWl0IGltcG9ydCh0b0ZpbGVVcmwoam9pbihkaXIsIFwiZnJlc2guZ2VuLnRzXCIpKS5ocmVmKSlcbiAgICAuZGVmYXVsdCBhcyBTZXJ2ZXJNYW5pZmVzdDtcblxuICBpZiAoRGVuby5hcmdzLmluY2x1ZGVzKFwiYnVpbGRcIikpIHtcbiAgICBjb25zdCBzdGF0ZSA9IGF3YWl0IGdldEludGVybmFsRnJlc2hTdGF0ZShcbiAgICAgIG1hbmlmZXN0LFxuICAgICAgY29uZmlnID8/IHt9LFxuICAgICk7XG4gICAgc3RhdGUuY29uZmlnLmRldiA9IGZhbHNlO1xuICAgIHN0YXRlLmxvYWRTbmFwc2hvdCA9IGZhbHNlO1xuICAgIHN0YXRlLmJ1aWxkID0gdHJ1ZTtcbiAgICBhd2FpdCBidWlsZChzdGF0ZSk7XG4gIH0gZWxzZSBpZiAoY29uZmlnKSB7XG4gICAgY29uc3Qgc3RhdGUgPSBhd2FpdCBnZXRJbnRlcm5hbEZyZXNoU3RhdGUoXG4gICAgICBtYW5pZmVzdCxcbiAgICAgIGNvbmZpZyxcbiAgICApO1xuICAgIHN0YXRlLmNvbmZpZy5kZXYgPSB0cnVlO1xuICAgIHN0YXRlLmxvYWRTbmFwc2hvdCA9IGZhbHNlO1xuICAgIGNvbnN0IGN0eCA9IGF3YWl0IGdldFNlcnZlckNvbnRleHQoc3RhdGUpO1xuICAgIGF3YWl0IHN0YXJ0U2VydmVyKGN0eC5oYW5kbGVyKCksIHtcbiAgICAgIC4uLnN0YXRlLmNvbmZpZy5zZXJ2ZXIsXG4gICAgICBiYXNlUGF0aDogc3RhdGUuY29uZmlnLmJhc2VQYXRoLFxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIC8vIExlZ2FjeSBlbnRyeSBwb2ludDogQmFjayB0aGVuIGBkZXYudHNgIHdvdWxkIGNhbGwgYG1haW4udHNgIGJ1dFxuICAgIC8vIHRoaXMgY2F1c2VzIGR1cGxpY2F0ZSBwbHVnaW4gaW5zdGFudGlhdGlvbiBpZiBib3RoIGBkZXYudHNgIGFuZFxuICAgIC8vIGBtYWluLnRzYCBpbnN0YW50aWF0ZSBwbHVnaW5zLlxuICAgIERlbm8uZW52LnNldChcIl9fRlJTSF9MRUdBQ1lfREVWXCIsIFwidHJ1ZVwiKTtcbiAgICBlbnRyeXBvaW50ID0gbmV3IFVSTChlbnRyeXBvaW50LCBiYXNlKS5ocmVmO1xuICAgIGF3YWl0IGltcG9ydChlbnRyeXBvaW50KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhcnJheXNFcXVhbDxUPihhOiBUW10sIGI6IFRbXSk6IGJvb2xlYW4ge1xuICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7ICsraSkge1xuICAgIGlmIChhW2ldICE9PSBiW2ldKSByZXR1cm4gZmFsc2U7XG4gIH1cbiAg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
// denoCacheMetadata=7556064461525603997,10443996258940654997