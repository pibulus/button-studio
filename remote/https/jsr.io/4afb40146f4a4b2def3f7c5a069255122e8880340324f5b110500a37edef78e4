// Copyright 2018-2025 the Deno authors. MIT license.
// This module is browser compatible.

import { normalizeString } from "../_common/normalize_string.ts";
import { assertPath } from "../_common/assert_path.ts";
import { isPosixPathSeparator } from "./_util.ts";

/**
 * Resolves path segments into a `path`.
 *
 * @example Usage
 * ```ts
 * import { resolve } from "@std/path/posix/resolve";
 * import { assertEquals } from "@std/assert";
 *
 * const path = resolve("/foo", "bar", "baz/asdf", "quux", "..");
 * assertEquals(path, "/foo/bar/baz/asdf");
 * ```
 *
 * @param pathSegments The path segments to resolve.
 * @returns The resolved path.
 */
export function resolve(...pathSegments: string[]): string {
  let resolvedPath = "";
  let resolvedAbsolute = false;

  for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    let path: string;

    if (i >= 0) path = pathSegments[i]!;
    else {
      // deno-lint-ignore no-explicit-any
      const { Deno } = globalThis as any;
      if (typeof Deno?.cwd !== "function") {
        throw new TypeError(
          "Resolved a relative path without a current working directory (CWD)",
        );
      }
      path = Deno.cwd();
    }

    assertPath(path);

    // Skip empty entries
    if (path.length === 0) {
      continue;
    }

    resolvedPath = `${path}/${resolvedPath}`;
    resolvedAbsolute = isPosixPathSeparator(path.charCodeAt(0));
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when Deno.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeString(
    resolvedPath,
    !resolvedAbsolute,
    "/",
    isPosixPathSeparator,
  );

  if (resolvedAbsolute) {
    if (resolvedPath.length > 0) return `/${resolvedPath}`;
    else return "/";
  } else if (resolvedPath.length > 0) return resolvedPath;
  else return ".";
}

// denoCacheMetadata={"headers":{"etag":"\"ca8fc9af1ebc514a89102f481121657e\"","last-modified":"Tue, 27 May 2025 07:30:37 GMT","age":"0","x-goog-stored-content-length":"1910","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-jsr-cache-id":"MEL","cross-origin-resource-policy":"cross-origin","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","expires":"Fri, 26 Jun 2026 12:57:34 GMT","access-control-allow-origin":"*","x-goog-metageneration":"1","cache-control":"public, max-age=31536000, immutable","x-content-type-options":"nosniff","date":"Thu, 26 Jun 2025 12:57:34 GMT","access-control-expose-headers":"*","x-goog-stored-content-encoding":"identity","server":"UploadServer","x-goog-hash":"crc32c=A8x6nw==,md5=yo/Jrx68UUqJEC9IESFlfg==","x-goog-generation":"1748331037802804","content-length":"1910","content-type":"text/typescript","x-jsr-cache-status":"revalidated","x-robots-tag":"noindex","x-guploader-uploadid":"ABgVH8-vbjhCaTfQSpZlZ5NSePvqnyV8PyG9Zl9K05nNrTYHzasdPgcaxjxaprzRbM9Mtp0E69G5OCw","x-goog-storage-class":"STANDARD","accept-ranges":"bytes","via":"1.1 google"},"url":"https://jsr.io/@std/path/1.1.0/posix/resolve.ts","time":1750942654}