// Copyright 2018-2025 the Deno authors. MIT license.
// This module is browser compatible.

import { assertPath } from "../_common/assert_path.ts";
import { fromFileUrl } from "./from_file_url.ts";
import { normalize } from "./normalize.ts";

/**
 * Join all given a sequence of `paths`,then normalizes the resulting path.
 *
 * @example Usage
 * ```ts
 * import { join } from "@std/path/posix/join";
 * import { assertEquals } from "@std/assert";
 *
 * assertEquals(join("/foo", "bar", "baz/asdf", "quux", ".."), "/foo/bar/baz/asdf");
 * assertEquals(join(new URL("file:///foo"), "bar", "baz/asdf", "quux", ".."), "/foo/bar/baz/asdf");
 * ```
 *
 * @example Working with URLs
 * ```ts
 * import { join } from "@std/path/posix/join";
 * import { assertEquals } from "@std/assert";
 *
 * const url = new URL("https://deno.land");
 * url.pathname = join("std", "path", "mod.ts");
 * assertEquals(url.href, "https://deno.land/std/path/mod.ts");
 *
 * url.pathname = join("//std", "path/", "/mod.ts");
 * assertEquals(url.href, "https://deno.land/std/path/mod.ts");
 * ```
 *
 * @param path The path to join. This can be string or file URL.
 * @param paths The paths to join.
 * @returns The joined path.
 */
export function join(path?: URL | string, ...paths: string[]): string {
  if (path === undefined) return ".";
  if (path instanceof URL) {
    path = fromFileUrl(path);
  }
  paths = path ? [path, ...paths] : paths;
  paths.forEach((path) => assertPath(path));
  const joined = paths.filter((path) => path.length > 0).join("/");
  return joined === "" ? "." : normalize(joined);
}

// denoCacheMetadata={"headers":{"age":"0","x-jsr-cache-status":"revalidated","via":"1.1 google","access-control-allow-origin":"*","x-jsr-cache-id":"MEL","accept-ranges":"bytes","server":"UploadServer","content-length":"1587","expires":"Fri, 26 Jun 2026 12:57:34 GMT","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","access-control-expose-headers":"*","content-type":"text/typescript","x-guploader-uploadid":"ABgVH8-G3kQgMI5Tb0MEn1xayjrqPuG4dSugKLAhI23h7d0Cv8DY4eLoBxj3g5Yb3blaqBdDdXRvEGw","x-goog-stored-content-encoding":"identity","date":"Thu, 26 Jun 2025 12:57:34 GMT","cache-control":"public, max-age=31536000, immutable","cross-origin-resource-policy":"cross-origin","etag":"\"7f6877b25f1a9ce569e0c3ffbd17f0f6\"","x-content-type-options":"nosniff","x-goog-hash":"crc32c=NeZMAQ==,md5=f2h3sl8anOVp4MP/vRfw9g==","x-goog-stored-content-length":"1587","x-goog-storage-class":"STANDARD","x-robots-tag":"noindex","last-modified":"Tue, 27 May 2025 07:30:37 GMT","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-goog-generation":"1748331037883419","x-goog-metageneration":"1"},"url":"https://jsr.io/@std/path/1.1.0/posix/join.ts","time":1750942654}