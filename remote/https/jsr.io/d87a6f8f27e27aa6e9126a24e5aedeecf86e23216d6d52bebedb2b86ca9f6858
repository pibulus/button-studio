// Copyright 2018-2025 the Deno authors. MIT license.
// This module is browser compatible.

import {
  assertArgs,
  lastPathSegment,
  stripSuffix,
} from "../_common/basename.ts";
import { CHAR_COLON } from "../_common/constants.ts";
import { stripTrailingSeparators } from "../_common/strip_trailing_separators.ts";
import { isPathSeparator, isWindowsDeviceRoot } from "./_util.ts";
import { fromFileUrl } from "./from_file_url.ts";

/**
 * Return the last portion of a `path`.
 * Trailing directory separators are ignored, and optional suffix is removed.
 *
 * @example Usage
 * ```ts
 * import { basename } from "@std/path/windows/basename";
 * import { assertEquals } from "@std/assert";
 *
 * assertEquals(basename("C:\\user\\Documents\\"), "Documents");
 * assertEquals(basename("C:\\user\\Documents\\image.png"), "image.png");
 * assertEquals(basename("C:\\user\\Documents\\image.png", ".png"), "image");
 * assertEquals(basename(new URL("file:///C:/user/Documents/image.png")), "image.png");
 * assertEquals(basename(new URL("file:///C:/user/Documents/image.png"), ".png"), "image");
 * ```
 *
 * @param path The path to extract the name from.
 * @param suffix The suffix to remove from extracted name.
 * @returns The extracted name.
 */
export function basename(path: string | URL, suffix = ""): string {
  if (path instanceof URL) {
    path = fromFileUrl(path);
  }
  assertArgs(path, suffix);

  // Check for a drive letter prefix so as not to mistake the following
  // path separator as an extra separator at the end of the path that can be
  // disregarded
  let start = 0;
  if (path.length >= 2) {
    const drive = path.charCodeAt(0);
    if (isWindowsDeviceRoot(drive)) {
      if (path.charCodeAt(1) === CHAR_COLON) start = 2;
    }
  }

  const lastSegment = lastPathSegment(path, isPathSeparator, start);
  const strippedSegment = stripTrailingSeparators(lastSegment, isPathSeparator);
  return suffix ? stripSuffix(strippedSegment, suffix) : strippedSegment;
}

// denoCacheMetadata={"headers":{"cache-control":"public, max-age=31536000, immutable","x-goog-stored-content-length":"1988","expires":"Fri, 26 Jun 2026 12:57:34 GMT","x-goog-storage-class":"STANDARD","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","access-control-allow-origin":"*","x-content-type-options":"nosniff","x-goog-stored-content-encoding":"identity","etag":"\"000d1225c63ca349c86b9e40d19ecd67\"","x-robots-tag":"noindex","x-goog-generation":"1748331037906123","content-length":"1988","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-jsr-cache-id":"MEL","content-type":"text/typescript","via":"1.1 google","date":"Thu, 26 Jun 2025 12:57:34 GMT","x-goog-metageneration":"1","last-modified":"Tue, 27 May 2025 07:30:37 GMT","x-jsr-cache-status":"revalidated","access-control-expose-headers":"*","cross-origin-resource-policy":"cross-origin","x-goog-hash":"crc32c=u9QwNw==,md5=AA0SJcY8o0nIa55A0Z7NZw==","x-guploader-uploadid":"ABgVH8-jZMBzJlGjt9GUC31Kf6o9ezcYehmZ-uu8QxGlbA7yKh7GNbPdf58jX2lTycNW4zpd","age":"0","accept-ranges":"bytes","server":"UploadServer"},"url":"https://jsr.io/@std/path/1.1.0/windows/basename.ts","time":1750942654}