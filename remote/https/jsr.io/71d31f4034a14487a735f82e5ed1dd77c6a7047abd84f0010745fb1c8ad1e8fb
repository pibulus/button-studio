import type * as esbuild from "./src/esbuild_types.ts";

import {
  denoResolverPlugin,
  type DenoResolverPluginOptions,
} from "./src/plugin_deno_resolver.ts";
export { denoResolverPlugin, type DenoResolverPluginOptions };

import {
  DEFAULT_LOADER,
  denoLoaderPlugin,
  type DenoLoaderPluginOptions,
} from "./src/plugin_deno_loader.ts";
export { DEFAULT_LOADER, denoLoaderPlugin, type DenoLoaderPluginOptions };

export {
  type EsbuildResolution,
  esbuildResolutionToURL,
  urlToEsbuildResolution,
} from "./src/shared.ts";

/** Options for the {@link denoPlugins} function. */
export interface DenoPluginsOptions {
  /**
   * Specify which loader to use. By default this will use the `native` loader,
   * unless the `--allow-run` permission has not been given.
   *
   * See {@link denoLoaderPlugin} for more information on the different loaders.
   */
  loader?: "native" | "portable";

  /**
   * Specify the path to a deno.json config file to use. This is equivalent to
   * the `--config` flag to the Deno executable. This path must be absolute.
   *
   * If not specified, the plugin will attempt to find the nearest deno.json and
   * use that. If the deno.json is part of a workspace, the plugin will
   * automatically find the workspace root.
   */
  configPath?: string;
  /**
   * Specify a URL to an import map file to use when resolving import
   * specifiers. This is equivalent to the `--import-map` flag to the Deno
   * executable. This URL may be remote or a local file URL.
   *
   * If this option is not specified, the deno.json config file is consulted to
   * determine what import map to use, if any.
   */
  importMapURL?: string;
  /**
   * Specify the path to a deno.lock file to use. This is equivalent to the
   * `--lock` flag to the Deno executable. This path must be absolute.
   *
   * If this option is not specified, the deno.json config file is consulted to
   * determine what lock file to use, if any.
   *
   * A lockfile must be present to resolve `jsr:` specifiers with the `portable`
   * loader. When using the `native` loader, a lockfile is not required, but to
   * ensure dependencies are de-duplicated correctly, it is recommended to use a
   * lockfile.
   */
  lockPath?: string;
  /**
   * Specify how the loader should handle NPM packages. By default and if this
   * option is set to `none`, the loader will use the global cache to resolve
   * NPM packages. If this option is set to `manual`, the loader will use a
   * manually managed `node_modules` directory. If this option is set to `auto`,
   * the loader will use a local `node_modules` directory.
   *
   * If this option is not specified, the deno.json config file is consulted to
   * determine which mode to use.
   *
   * This option is ignored when using the `portable` loader, as the portable
   * loader always uses a manual `node_modules` directory (equivalent of
   * `nodeModulesDir: "manual"`).
   */
  nodeModulesDir?: "auto" | "manual" | "none";
}

/**
 * A convenience function to enable both the Deno resolver plugin, and Deno
 * loader plugin.
 */
export function denoPlugins(opts: DenoPluginsOptions = {}): esbuild.Plugin[] {
  return [
    denoResolverPlugin(opts),
    denoLoaderPlugin(opts),
  ];
}

// denoCacheMetadata={"headers":{"content-length":"3240","access-control-allow-origin":"*","last-modified":"Mon, 14 Oct 2024 12:34:28 GMT","content-type":"text/typescript","x-goog-stored-content-encoding":"identity","x-jsr-cache-id":"MEL","cross-origin-resource-policy":"cross-origin","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","access-control-expose-headers":"*","x-goog-storage-class":"STANDARD","x-guploader-uploadid":"ABgVH88Sh_B4jJqnwrSHwDiCyksfmKSXnLVwRgFs2Pb2VRulOQSRY_sIp5VXDdr__FVY5prnfhv0knI","x-goog-metageneration":"1","server":"UploadServer","via":"1.1 google","x-goog-hash":"crc32c=7sDywg==,md5=Sw5zvjeWS1DcxfzTdk09Qw==","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-jsr-cache-status":"miss","x-robots-tag":"noindex","expires":"Fri, 26 Jun 2026 12:57:34 GMT","x-goog-generation":"1728909267960351","x-goog-stored-content-length":"3240","cache-control":"public, max-age=31536000, immutable","date":"Thu, 26 Jun 2025 12:57:34 GMT","etag":"\"4b0e73be37964b50dcc5fcd3764d3d43\"","accept-ranges":"bytes"},"url":"https://jsr.io/@luca/esbuild-deno-loader/0.11.0/mod.ts","time":1750942654}