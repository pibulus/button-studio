// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
import type { Comparator, SemVer } from "./types.ts";

/**
 * MAX is a sentinel value used by some range calculations.
 * It is equivalent to `∞.∞.∞`.
 */
export const MAX: SemVer = {
  major: Number.POSITIVE_INFINITY,
  minor: Number.POSITIVE_INFINITY,
  patch: Number.POSITIVE_INFINITY,
  prerelease: [],
  build: [],
};

/**
 * The minimum valid SemVer object. Equivalent to `0.0.0`.
 */
export const MIN: SemVer = {
  major: 0,
  minor: 0,
  patch: 0,
  prerelease: [],
  build: [],
};

/**
 * A sentinel value used to denote an invalid SemVer object
 * which may be the result of impossible ranges or comparator operations.
 * @example
 * ```ts
 * import { equals } from "https://deno.land/std@$STD_VERSION/semver/equals.ts";
 * import { parse } from "https://deno.land/std@$STD_VERSION/semver/parse.ts";
 * import { INVALID } from "https://deno.land/std@$STD_VERSION/semver/constants.ts"
 * equals(parse("1.2.3"), INVALID);
 * ```
 */
export const INVALID: SemVer = {
  major: Number.NEGATIVE_INFINITY,
  minor: Number.POSITIVE_INFINITY,
  patch: Number.POSITIVE_INFINITY,
  prerelease: [],
  build: [],
};

/**
 * ANY is a sentinel value used by some range calculations. It is not a valid
 * SemVer object and should not be used directly.
 * @example
 * ```ts
 * import { equals } from "https://deno.land/std@$STD_VERSION/semver/equals.ts";
 * import { parse } from "https://deno.land/std@$STD_VERSION/semver/parse.ts";
 * import { ANY } from "https://deno.land/std@$STD_VERSION/semver/constants.ts"
 * equals(parse("1.2.3"), ANY); // false
 * ```
 */
export const ANY: SemVer = {
  major: Number.NaN,
  minor: Number.NaN,
  patch: Number.NaN,
  prerelease: [],
  build: [],
};

/**
 * A comparator which will span all valid semantic versions
 */
export const ALL: Comparator = {
  operator: "",
  ...ANY,
  semver: ANY,
};

/**
 * A comparator which will not span any semantic versions
 */
export const NONE: Comparator = {
  operator: "<",
  ...MIN,
  semver: MIN,
};

// denoCacheMetadata={"headers":{"content-length":"2058","cross-origin-resource-policy":"same-origin","cross-origin-embedder-policy":"same-origin","x-amz-version-id":"xpM7Lk8nnwcblCtZZiYzkGQbWygVSFg3","x-amz-server-side-encryption":"AES256","x-cache":"Hit from cloudfront","x-amz-cf-id":"jLI5mNCr3CfVt0uNgOt0omLvYnzQNUHNyBeqAft_EfYYYYQctkUTdA==","date":"Fri, 21 Mar 2025 14:39:03 GMT","access-control-allow-origin":"*","content-type":"application/typescript; charset=utf-8","strict-transport-security":"max-age=63072000; includeSubDomains; preload","vary":"Accept-Encoding, Origin","accept-ranges":"bytes","cache-control":"public, max-age=31536000, immutable","etag":"\"97667091f9fa959be51fa5cbc6ca4619\"","server":"deno/gcp-asia-southeast1","server-timing":"fetchSource;dur=66","age":"8374707","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","last-modified":"Thu, 15 Feb 2024 05:02:29 GMT","x-frame-options":"DENY","referrer-policy":"strict-origin-when-cross-origin","x-amz-cf-pop":"SIN52-P1","x-content-type-options":"nosniff","x-amz-replication-status":"COMPLETED","cross-origin-opener-policy":"same-origin","via":"http/2 edgeproxy-h"},"url":"https://deno.land/std@0.216.0/semver/constants.ts","time":1750942649}