// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.
// Copyright the Browserify authors. MIT License.
// Ported mostly from https://github.com/browserify/path-browserify/
// This module is browser compatible.

/**
 * Utilities for working with OS-specific file paths.
 *
 * Functions from this module will automatically switch to support the path style
 * of the current OS, either `windows` for Microsoft Windows, or `posix` for
 * every other operating system, eg. Linux, MacOS, BSD etc.
 *
 * To use functions for a specific path style regardless of the current OS
 * import the modules from the platform sub directory instead.
 *
 * Example, for `posix`:
 *
 * ```ts
 * import { fromFileUrl } from "https://deno.land/std@$STD_VERSION/path/posix/from_file_url.ts";
 * const p = fromFileUrl("file:///home/foo");
 * console.log(p); // "/home/foo"
 * ```
 *
 * or, for `windows`:
 *
 * ```ts
 * import { fromFileUrl } from "https://deno.land/std@$STD_VERSION/path/windows/from_file_url.ts";
 * const p = fromFileUrl("file:///home/foo");
 * console.log(p); // "\\home\\foo"
 * ```
 *
 * This module is browser compatible.
 *
 * @module
 */

import { isWindows } from "./_os.ts";
import * as _windows from "./windows/mod.ts";
import * as _posix from "./posix/mod.ts";

/** @deprecated (will be removed after 1.0.0) Import from {@link https://deno.land/std/path/windows/mod.ts} instead. */
export const win32 = _windows;

/** @deprecated (will be removed after 1.0.0) Import from {@link https://deno.land/std/posix/mod.ts} instead. */
export const posix = _posix;

export const sep = isWindows ? _windows.sep : _posix.sep;
export const delimiter = isWindows ? _windows.delimiter : _posix.delimiter;

export * from "./basename.ts";
export * from "./dirname.ts";
export * from "./extname.ts";
export * from "./format.ts";
export * from "./from_file_url.ts";
export * from "./is_absolute.ts";
export * from "./join.ts";
export * from "./normalize.ts";
export * from "./parse.ts";
export * from "./relative.ts";
export * from "./resolve.ts";
export * from "./to_file_url.ts";
export * from "./to_namespaced_path.ts";
export * from "./common.ts";
export * from "./separator.ts";
export * from "./_interface.ts";
export * from "./glob_to_regexp.ts";
export * from "./is_glob.ts";
export * from "./join_globs.ts";
export * from "./normalize_glob.ts";

// denoCacheMetadata={"headers":{"via":"http/2 edgeproxy-h","x-cache":"Hit from cloudfront","strict-transport-security":"max-age=63072000; includeSubDomains; preload","cross-origin-opener-policy":"same-origin","x-frame-options":"DENY","x-amz-server-side-encryption":"AES256","content-type":"application/typescript; charset=utf-8","cross-origin-resource-policy":"same-origin","accept-ranges":"bytes","vary":"Accept-Encoding, Origin","last-modified":"Fri, 24 Nov 2023 02:50:10 GMT","x-amz-cf-id":"e6MThoosLVzrH72tCtWOsJVneRO1i5G8y2lExKEoDJ9x1ks6TbLJww==","server":"deno/gcp-asia-southeast1","x-amz-replication-status":"COMPLETED","cache-control":"public, max-age=31536000, immutable","access-control-allow-origin":"*","content-length":"2364","cross-origin-embedder-policy":"same-origin","x-amz-version-id":"15eYUp2Ml2Hp27J.iNyDrnkDsBLbnGn4","x-amz-cf-pop":"SIN52-P1","x-content-type-options":"nosniff","referrer-policy":"strict-origin-when-cross-origin","date":"Sun, 16 Feb 2025 15:21:07 GMT","age":"11223385","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","etag":"\"6447c981fdc1ac07a0ba751fb76ba2b4\"","server-timing":"fetchSource;dur=2"},"url":"https://deno.land/std@0.208.0/path/mod.ts","time":1750942651}